# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: sshx.proto
# Protobuf Python Version: 5.29.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    3,
    '',
    'sshx.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\nsshx.proto\x12\x04sshx\"5\n\x0cTerminalData\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\x12\x0b\n\x03seq\x18\x03 \x01(\x04\"9\n\rTerminalInput\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\x12\x0e\n\x06offset\x18\x03 \x01(\x04\"6\n\x0cTerminalSize\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0c\n\x04rows\x18\x02 \x01(\r\x12\x0c\n\x04\x63ols\x18\x03 \x01(\r\"~\n\x0bOpenRequest\x12\x0e\n\x06origin\x18\x01 \x01(\t\x12\x17\n\x0f\x65ncrypted_zeros\x18\x02 \x01(\x0c\x12\x0c\n\x04name\x18\x03 \x01(\t\x12 \n\x13write_password_hash\x18\x04 \x01(\x0cH\x00\x88\x01\x01\x42\x16\n\x14_write_password_hash\"8\n\x0cOpenResponse\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05token\x18\x02 \x01(\t\x12\x0b\n\x03url\x18\x03 \x01(\t\"j\n\x0fSequenceNumbers\x12+\n\x03map\x18\x01 \x03(\x0b\x32\x1e.sshx.SequenceNumbers.MapEntry\x1a*\n\x08MapEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\r\n\x05value\x18\x02 \x01(\x04:\x02\x38\x01\",\n\x08NewShell\x12\n\n\x02id\x18\x01 \x01(\r\x12\t\n\x01x\x18\x02 \x01(\x05\x12\t\n\x01y\x18\x03 \x01(\x05\"\xb7\x01\n\x0c\x43lientUpdate\x12\x0f\n\x05hello\x18\x01 \x01(\tH\x00\x12\"\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x12.sshx.TerminalDataH\x00\x12\'\n\rcreated_shell\x18\x03 \x01(\x0b\x32\x0e.sshx.NewShellH\x00\x12\x16\n\x0c\x63losed_shell\x18\x04 \x01(\rH\x00\x12\x0e\n\x04pong\x18\x0e \x01(\x06H\x00\x12\x0f\n\x05\x65rror\x18\x0f \x01(\tH\x00\x42\x10\n\x0e\x63lient_message\"\xf3\x01\n\x0cServerUpdate\x12$\n\x05input\x18\x01 \x01(\x0b\x32\x13.sshx.TerminalInputH\x00\x12&\n\x0c\x63reate_shell\x18\x02 \x01(\x0b\x32\x0e.sshx.NewShellH\x00\x12\x15\n\x0b\x63lose_shell\x18\x03 \x01(\rH\x00\x12%\n\x04sync\x18\x04 \x01(\x0b\x32\x15.sshx.SequenceNumbersH\x00\x12$\n\x06resize\x18\x05 \x01(\x0b\x32\x12.sshx.TerminalSizeH\x00\x12\x0e\n\x04ping\x18\x0e \x01(\x06H\x00\x12\x0f\n\x05\x65rror\x18\x0f \x01(\tH\x00\x42\x10\n\x0eserver_message\"+\n\x0c\x43loseRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05token\x18\x02 \x01(\t\"\x0f\n\rCloseResponse\"\x93\x02\n\x11SerializedSession\x12\x17\n\x0f\x65ncrypted_zeros\x18\x01 \x01(\x0c\x12\x33\n\x06shells\x18\x02 \x03(\x0b\x32#.sshx.SerializedSession.ShellsEntry\x12\x10\n\x08next_sid\x18\x03 \x01(\r\x12\x10\n\x08next_uid\x18\x04 \x01(\r\x12\x0c\n\x04name\x18\x05 \x01(\t\x12 \n\x13write_password_hash\x18\x06 \x01(\x0cH\x00\x88\x01\x01\x1a\x44\n\x0bShellsEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12$\n\x05value\x18\x02 \x01(\x0b\x32\x15.sshx.SerializedShell:\x02\x38\x01\x42\x16\n\x14_write_password_hash\"\xbc\x01\n\x0fSerializedShell\x12\x0e\n\x06seqnum\x18\x01 \x01(\x04\x12\x0c\n\x04\x64\x61ta\x18\x02 \x03(\x0c\x12\x14\n\x0c\x63hunk_offset\x18\x03 \x01(\x04\x12\x13\n\x0b\x62yte_offset\x18\x04 \x01(\x04\x12\x0e\n\x06\x63losed\x18\x05 \x01(\x08\x12\x11\n\twinsize_x\x18\x06 \x01(\x05\x12\x11\n\twinsize_y\x18\x07 \x01(\x05\x12\x14\n\x0cwinsize_rows\x18\x08 \x01(\r\x12\x14\n\x0cwinsize_cols\x18\t \x01(\r2\xa5\x01\n\x0bSshxService\x12-\n\x04Open\x12\x11.sshx.OpenRequest\x1a\x12.sshx.OpenResponse\x12\x35\n\x07\x43hannel\x12\x12.sshx.ClientUpdate\x1a\x12.sshx.ServerUpdate(\x01\x30\x01\x12\x30\n\x05\x43lose\x12\x12.sshx.CloseRequest\x1a\x13.sshx.CloseResponseb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'sshx_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_SEQUENCENUMBERS_MAPENTRY']._loaded_options = None
  _globals['_SEQUENCENUMBERS_MAPENTRY']._serialized_options = b'8\001'
  _globals['_SERIALIZEDSESSION_SHELLSENTRY']._loaded_options = None
  _globals['_SERIALIZEDSESSION_SHELLSENTRY']._serialized_options = b'8\001'
  _globals['_TERMINALDATA']._serialized_start=20
  _globals['_TERMINALDATA']._serialized_end=73
  _globals['_TERMINALINPUT']._serialized_start=75
  _globals['_TERMINALINPUT']._serialized_end=132
  _globals['_TERMINALSIZE']._serialized_start=134
  _globals['_TERMINALSIZE']._serialized_end=188
  _globals['_OPENREQUEST']._serialized_start=190
  _globals['_OPENREQUEST']._serialized_end=316
  _globals['_OPENRESPONSE']._serialized_start=318
  _globals['_OPENRESPONSE']._serialized_end=374
  _globals['_SEQUENCENUMBERS']._serialized_start=376
  _globals['_SEQUENCENUMBERS']._serialized_end=482
  _globals['_SEQUENCENUMBERS_MAPENTRY']._serialized_start=440
  _globals['_SEQUENCENUMBERS_MAPENTRY']._serialized_end=482
  _globals['_NEWSHELL']._serialized_start=484
  _globals['_NEWSHELL']._serialized_end=528
  _globals['_CLIENTUPDATE']._serialized_start=531
  _globals['_CLIENTUPDATE']._serialized_end=714
  _globals['_SERVERUPDATE']._serialized_start=717
  _globals['_SERVERUPDATE']._serialized_end=960
  _globals['_CLOSEREQUEST']._serialized_start=962
  _globals['_CLOSEREQUEST']._serialized_end=1005
  _globals['_CLOSERESPONSE']._serialized_start=1007
  _globals['_CLOSERESPONSE']._serialized_end=1022
  _globals['_SERIALIZEDSESSION']._serialized_start=1025
  _globals['_SERIALIZEDSESSION']._serialized_end=1300
  _globals['_SERIALIZEDSESSION_SHELLSENTRY']._serialized_start=1208
  _globals['_SERIALIZEDSESSION_SHELLSENTRY']._serialized_end=1276
  _globals['_SERIALIZEDSHELL']._serialized_start=1303
  _globals['_SERIALIZEDSHELL']._serialized_end=1491
  _globals['_SSHXSERVICE']._serialized_start=1494
  _globals['_SSHXSERVICE']._serialized_end=1659
# @@protoc_insertion_point(module_scope)
